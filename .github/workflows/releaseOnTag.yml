name: Release on tag

on:
  push:
    tags:
      - '*'           # Trigger on any new tag push (e.g., 0.0.3)
  workflow_dispatch:  # Optional manual trigger

permissions:
  contents: write     # Needed to create releases

jobs:
  release:
    if: github.event.deleted != true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine current and previous tag
        id: tags
        shell: bash
        run: |
          current="${{ github.ref_name }}"   # e.g. 0.0.3
          prev="$(git describe --tags --abbrev=0 "${current}^" 2>/dev/null || echo "")"

          echo "current=$current" >> "$GITHUB_OUTPUT"
          echo "previous=$prev"   >> "$GITHUB_OUTPUT"

      - name: Build changelog with commit links
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          current="${{ steps.tags.outputs.current }}"
          previous="${{ steps.tags.outputs.previous }}"

          # Determine the commit range
          if [ -n "$previous" ]; then
            range="$previous..$current"
          else
            # First-ever tag â€” include all history reachable by this tag
            range="$current"
          fi

          base_url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"

          # Use record (0x1e) and field (0x1f) separators to handle any message content safely
          mapfile -d $'\x1e' records < <(git log "$range" --pretty=format:'%H%x1f%s%x1e' || true)

          body="Changelog:%0A%0A"  # header + blank line (URL-encoded newlines for Actions output)
          if [ ${#records[@]} -eq 0 ]; then
            body+="- No changes since previous tag.%0A"
          else
            for rec in "${records[@]}"; do
              # skip empty trailing read
              [ -z "$rec" ] && continue
              hash="${rec%%$'\x1f'*}"
              subject="${rec#*$'\x1f'}"
              short="${hash:0:7}"
              line="- [${short}](${base_url}/commit/${hash}) ${subject}"
              # Percent-escape for GitHub Actions output
              line="${line//'%'/'%25'}"
              line="${line//$'\n'/'%0A'}"
              line="${line//$'\r'/'%0D'}"
              body+="${line}%0A"
            done
          fi

          echo "body=${body}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tags.outputs.current }}
          name: Gungame v${{ steps.tags.outputs.current }}
          body: ${{ steps.changelog.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
